/** @param {NS} ns */
export async function main(ns) {
    // TODO: remove restriction after achievo
    const BITNODE_1_MAX_RAM = 128;
    const BITNODE_1_MAX_CORES = 1;
    const HOST = ns.getHostname();
    ns.disableLog("disableLog");
    ns.disableLog("sleep");
    ns.disableLog("getServerMaxRam");
    ns.disableLog("getServerUsedRam");
    /** async ns.run
     * @param {Parameters<typeof NS.run>} params */
    async function aRun(...params) {
        if (ns.getScriptRam(params[0]) > ns.getServerMaxRam(HOST) - ns.getServerUsedRam(HOST)) {
            ns.scriptKill("share.js", HOST);
        }
        const pid = ns.run(...params);
        if (pid === 0)
            return;
        while (ns.isRunning(pid, HOST)) {
            await ns.sleep(1);
        }
    }
    // eslint-disable-next-line no-magic-numbers
    const NON_WORLD_DAEMON_BNS = [6, 7];
    const player = ns.getPlayer();
    const bn = ns.getResetInfo().currentNode; //player.bitNodeN;
    let maxHackLevel = NON_WORLD_DAEMON_BNS.includes(bn) ? 0 : 3000;
    try {
        maxHackLevel = ns.getServerRequiredHackingLevel("w0r1d_d43m0n");
    }
    catch { }
    const bn1Challenge = bn === 1 && !eval("document.achievements").includes("BN1: Challenge");
    while (true) {
        if (player.skills.hacking >= maxHackLevel)
            await aRun("/sing/ascend.js", 1, bn);
        await aRun("/sing/upgrades.js", 1, bn1Challenge ? BITNODE_1_MAX_RAM : Infinity, bn1Challenge ? BITNODE_1_MAX_CORES : Infinity);
        if (!ns.scriptRunning("/sing/createProg.js", HOST)) {
            await aRun("/sing/activities.js", 1, maxHackLevel, bn);
        }
        await aRun("/sing/keepRunning.js");
        const PERIOD_IN_MILLIS = 3000;
        await ns.sleep(PERIOD_IN_MILLIS);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2luZy5qcyIsInNvdXJjZVJvb3QiOiJodHRwOi8vbG9jYWxob3N0OjgwMDAvc291cmNlcy8iLCJzb3VyY2VzIjpbInNpbmcvc2luZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQSxxQkFBcUI7QUFDckIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBb0I7SUFDM0MseUNBQXlDO0lBQ3pDLE1BQU0saUJBQWlCLEdBQUcsR0FBRyxDQUFDO0lBQzlCLE1BQU0sbUJBQW1CLEdBQUcsQ0FBQyxDQUFDO0lBQzlCLE1BQU0sSUFBSSxHQUFHLEVBQUUsQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUU5QixFQUFFLENBQUMsVUFBVSxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQzVCLEVBQUUsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDdkIsRUFBRSxDQUFDLFVBQVUsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO0lBQ2pDLEVBQUUsQ0FBQyxVQUFVLENBQUMsa0JBQWtCLENBQUMsQ0FBQztJQUNsQzttREFDK0M7SUFDL0MsS0FBSyxVQUFVLElBQUksQ0FBQyxHQUFHLE1BQStDO1FBQ2xFLElBQUksRUFBRSxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUNuRixFQUFFLENBQUMsVUFBVSxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsQ0FBQztTQUNuQztRQUNELE1BQU0sR0FBRyxHQUFHLEVBQUUsQ0FBQyxHQUFHLENBQUMsR0FBRyxNQUFNLENBQUMsQ0FBQztRQUM5QixJQUFJLEdBQUcsS0FBSyxDQUFDO1lBQUUsT0FBTztRQUN0QixPQUFPLEVBQUUsQ0FBQyxTQUFTLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQyxFQUFFO1lBQzVCLE1BQU0sRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNyQjtJQUNMLENBQUM7SUFFRCw0Q0FBNEM7SUFDNUMsTUFBTSxvQkFBb0IsR0FBRyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUVwQyxNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsU0FBUyxFQUFFLENBQUM7SUFDOUIsTUFBTSxFQUFFLEdBQUcsRUFBRSxDQUFDLFlBQVksRUFBRSxDQUFDLFdBQVcsQ0FBQyxDQUFDLGtCQUFrQjtJQUM1RCxJQUFJLFlBQVksR0FBRyxvQkFBb0IsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO0lBQ2hFLElBQUk7UUFDQSxZQUFZLEdBQUcsRUFBRSxDQUFDLDZCQUE2QixDQUFDLGNBQWMsQ0FBQyxDQUFDO0tBQ25FO0lBQUMsTUFBTSxHQUFFO0lBQ1YsTUFBTSxZQUFZLEdBQUcsRUFBRSxLQUFLLENBQUMsSUFBSSxDQUFFLElBQUksQ0FBQyx1QkFBdUIsQ0FBYyxDQUFDLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0lBQzVHLE9BQU8sSUFBSSxFQUFFO1FBQ04sSUFBSSxNQUFNLENBQUMsTUFBTSxDQUFDLE9BQU8sSUFBSSxZQUFZO1lBQ3JDLE1BQU0sSUFBSSxDQUFDLGlCQUFpQixFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUN6QyxNQUFNLElBQUksQ0FBQyxtQkFBbUIsRUFBRSxDQUFDLEVBQUUsWUFBWSxDQUFDLENBQUMsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLENBQUMsUUFBUSxFQUFFLFlBQVksQ0FBQyxDQUFDLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQy9ILElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLHFCQUFxQixFQUFFLElBQUksQ0FBQyxFQUFFO1lBQ2hELE1BQU0sSUFBSSxDQUFDLHFCQUFxQixFQUFFLENBQUMsRUFBRSxZQUFZLEVBQUUsRUFBRSxDQUFDLENBQUM7U0FDMUQ7UUFDRCxNQUFNLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO1FBRW5DLE1BQU0sZ0JBQWdCLEdBQUcsSUFBSSxDQUFDO1FBQ3BDLE1BQU0sRUFBRSxDQUFDLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0tBQ2pDO0FBQ0YsQ0FBQyJ9